* Warmup 1 - Create An NPM Package
** How to add dependency in  auto ?
#+BEGIN_QUOTE
Using the --save-dev option to add it to package.json as a package dependency:
#+END_QUOTE

** npm link 
+ Add your target directory to .zshrc or .bashrc as the format below
#+BEGIN_SRC sh
export NODE_PATH=/usr/local/lib/node_modules
#+END_SRC

** npm unlink -g greet
+ distinguish the difference of -g and not -g 

** man chmod
+ why use =chmod a+x= ???

** minimist package
+ how to use 
  #+BEGIN_SRC js
var argv = require('minimist')(process.argv.slice(2));
  #+END_SRC
+ Use the minimist package to parse command arguments
+ =-x=  
  - only one alphabet
  - if =-xy= will get ={x:true, y:true}=
  - if =-x 32=  will get ={x:32}=
+ =--xx=
  - you can add value to it by =--xx yy= or =--xx=yy=, and get ={xx:'yy'}=
  - the same as =-x= if you only use =--xx=, you get ={xx:true}=

** Shebang (Unix)  
+ the development of shebang
+ the advantage of =!#/usr/bin/env node= (compare with =!#/usr/bin/node=)
* Warmup 2 - Setting Up Mocha For Testing
** mocha 
- [[http://visionmedia.github.io/mocha/][link]]
- why use =mocha -R spec= 
  + from =mocha -h=
     #+BEGIN_QUOTE
-R, --reporter <name> specify the reporter to use
     #+END_QUOTE
  + so, it is a command that we choose the =spec= reporter.
  + any other reporters? how to choose reporters?
    - [[http://visionmedia.github.io/mocha/#reporters][reporters]]
    - I like the nyan reporter,  Miao~~~
- [[http://code.tutsplus.com/tutorials/better-coffeescript-testing-with-mocha--net-24696][with coffee]]

** chai
- [[http://chaijs.com][link]]
- [[http://chaijs.com/api/bdd/][BDD with chai]]

** helper
+ why?
  #+BEGIN_QUOTE
As your test suite grows bigger into multiple files, you might find it helpful to be able to share code across all files.
  #+END_QUOTE
+ difference when running mocha
  #+BEGIN_SRC sh
mocha --require test/support/helper
  #+END_SRC

+ use global value in help
  
* Warmup 3 - Using CoffeeScript
** automatically compile
#+BEGIN_SRC sh
coffee --watch --compile --output lib src
#+END_SRC

+ a tool to convert js to coffee, helpful when you are new to coffee
  - [[http://js2coffee.org][js2coffee]]
** task runners / project builders 
+ Makefile for small project
  - =.PHONY= 
  - how to depend on other process?

** test with coffee
#+BEGIN_SRC sh 
//mocha.opts
--compilers coffee:coffee-script/register
#+END_SRC
